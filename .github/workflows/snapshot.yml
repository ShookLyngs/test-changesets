# Release snapshot packages to NPM.

name: Release Snapshots

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release-snapshots:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      issues: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm i

      - name: Add snapshot changeset
        run: |
          cat << EOF > ".changeset/snap-release-changeset.md"
            ---
            "test-changesets-action": patch
            ---
            Add snapshot changeset for snapshot releases
          EOF

      - name: Version packages as "package@0.0.0-snap-{timestamp}"
        run: npx changeset version --snapshot snap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm (ignore GitHub)
        uses: changesets/action@v1
        id: changesets
        with:
          publish: pnpm changeset publish --tag snap
          createGithubReleases: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Check status of the published outputs
        run: |
          echo "published=${{ steps.changesets.outputs.published }}"
          echo "publishedPackages=${{ steps.changesets.outputs.publishedPackages }}"

      - name: Create comment body
        uses: actions/github-script@v7
        id: comment-body
        if: steps.changesets.outputs.published
        env:
          PACKAGES: ${{ steps.changesets.outputs.publishedPackages }}
          IS_PULL: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged }}
        with:
          result-encoding: string
          script: |
            const packages = JSON.parse(process.env.PACKAGES)
            const packagesTable = packages.map((p) => `| ${p.name} | \`${p.version}\` |`)
            const body = ['### New package releases', '| Package | Version |', '| --- | --- |', packagesTable].join('\n')
            
            console.log('is pull request:', process.env.IS_PULL);
            console.log('comment body:', body);
            
            if (process.env.IS_PULL == 'true') {
              github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,  
                repo: context.repo.repo,
                body: body,
              });
            } else {
              github.rest.repos.createCommitComment({
                commit_sha: context.sha,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body,
              });
            }
